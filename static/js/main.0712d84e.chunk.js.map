{"version":3,"sources":["editable-stuff/resume.pdf","components/MainBody.jsx","components/AboutMe.jsx","components/ProjectCard.jsx","components/Project.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainBody","props","toggleHover","data","newhoverStatus","state","hoverstatus","event","icon","id","setState","backgroundType","Configs","devInfo","devIntro","devDesc","icons","className","this","map","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","role","Component","AboutMe","componentDidMount","showInsta","handleRequest","e","axios","get","instaLink","instaUsername","instaQuerry","then","response","instaProfilePic","graphql","user","profile_pic_url_hd","catch","error","console","message","finally","heading","aboutDev","showInstaProfilePic","resumeURL","Pdf","src","alt","ProjectCard","handleUpdatetime","date","Date","value","pushed_at","diff","getTime","hours","Math","trunc","updated_at","toString","day","getDate","monthIndex","getMonth","year","getFullYear","stargazers_count","download_url","svn_url","repo_url","name","description","languages_url","Language","array","total_count","index","push","language","Project","gitHubLink","gitHubUsername","gitHubQuerry","projectsArray","slice","projectsLength","project","Footer","bgStyle","backgroundColor","style","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0712d84e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.52d088a7.pdf\";","import React, { Component } from \"react\";\r\nimport Typist from \"react-typist\";\r\nimport \"../App\";\r\nimport Configs from \"../editable-stuff/configurations.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nclass MainBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      backgroundType: Configs.backgroundType,\r\n      devInfo: Configs.devIntro,\r\n      devDesc: Configs.devDesc,\r\n      hoverstatus: [\"socialicons\", \"socialicons\", \"socialicons\", \"socialicons\"],\r\n    };\r\n  }\r\n\r\n  toggleHover = (data) => {\r\n    const newhoverStatus = [...this.state.hoverstatus];\r\n\r\n    if (data.event === \"enter\") {\r\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\r\n      return this.setState({ hoverstatus: newhoverStatus });\r\n    } else if (data.event === \"leave\") {\r\n      newhoverStatus[data.icon.id] = \"socialicons\";\r\n      return this.setState({ hoverstatus: newhoverStatus });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const icons = Configs.icons;\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          id=\"divmainbody\"\r\n          className=\"jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\r\n        >\r\n          <div className=\"container container-fluid text-center \">\r\n            <h1 className=\"display-1\">\r\n              {this.state.devInfo}\r\n            </h1>\r\n            <Typist className=\"lead\"> {this.state.devDesc}</Typist>\r\n            <div className=\"p-5\">\r\n              {icons.map(icon => (\r\n                <a\r\n                  key={icon.id}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={icon.url}\r\n                  aria-label={`My ${icon.image.split(\"-\")[1]}`}\r\n                >\r\n                  <i\r\n                    className={`fab ${icon.image}  fa-3x ${\r\n                      this.state.hoverstatus[icon.id]\r\n                    }`}\r\n                    onMouseOver={() => this.toggleHover({ icon, event: \"enter\" })}\r\n                    onMouseOut={() => this.toggleHover({ icon, event: \"leave\" })}\r\n                  />\r\n                </a>\r\n              ))}\r\n            </div>\r\n            <a\r\n              className=\"btn btn-outline-light btn-lg\"\r\n              href=\"#aboutme\"\r\n              role=\"button\"\r\n              aria-label=\"Learn more about me\"\r\n            >\r\n              More about me\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainBody;\r\n","import React, { Component } from \"react\";\r\nimport Configs from \"../editable-stuff/configurations.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport Pdf from \"../editable-stuff/resume.pdf\";\r\n\r\nclass AboutMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      heading: \"About me\",\r\n      aboutDev: Configs.aboutDev,\r\n      instaProfilePic: '',\r\n      showInsta: Configs.showInstaProfilePic,\r\n      resumeURL: Pdf\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.showInsta) this.handleRequest();\r\n  };\r\n\r\n  handleRequest = (e) => {\r\n    axios\r\n      .get(Configs.instaLink + Configs.instaUsername + Configs.instaQuerry)\r\n      .then(response => {\r\n        // handle success\r\n        // console.log(response.data.graphql);\r\n        return this.setState({\r\n          instaProfilePic: response.data.graphql.user.profile_pic_url_hd\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        this.setState({showInsta : false});\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\r\n        <div className=\"container container-fluid p-5\">\r\n          <div className=\"row\">\r\n          {this.state.showInsta &&\r\n              <div className=\"col-5 d-none d-lg-block align-self-center\">\r\n                <img\r\n                  className=\"border border-secondary rounded-circle\"\r\n                  src={this.state.instaProfilePic}\r\n                  alt=\"profilepicture\"\r\n                />\r\n              </div>\r\n            }\r\n            <div className={`col-lg-${this.state.showInsta ? \"7\" : \"12\"}`}>\r\n              <h1 className=\"display-4 mb-5 text-center\">\r\n                {this.state.heading}\r\n              </h1>\r\n              <p className=\"lead text-center\">{this.state.aboutDev}</p>\r\n              {this.state.resumeURL &&\r\n                  <p className=\"lead text-center\">\r\n                  <a\r\n                    className=\"btn btn-outline-dark btn-lg\"\r\n                    href={Pdf}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer noopener\"\r\n                    role=\"button\"\r\n                    aria-label=\"Resume/CV\"\r\n                  >\r\n                    Resume\r\n                  </a>\r\n                </p>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nclass ProjectCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: this.props.value,\r\n      updated_at: \"0 mints\",\r\n      stargazers_count: this.props.value.stargazers_count,\r\n      download_url: `${this.props.value.svn_url}/archive/master.zip`,\r\n      repo_url: this.props.value.svn_url,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.handleUpdatetime();\r\n  };\r\n\r\n  handleUpdatetime = () => {\r\n    const date = new Date(this.state.value.pushed_at);\r\n    const nowdate = new Date();\r\n    const diff = nowdate.getTime() - date.getTime();\r\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n    if (hours < 24) {\r\n      return this.setState({ updated_at: `${hours.toString()} hours ago` });\r\n    } else {\r\n      const monthNames = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ];\r\n      const day = date.getDate();\r\n      const monthIndex = date.getMonth();\r\n      const year = date.getFullYear();\r\n\r\n      return this.setState({\r\n        updated_at: `on ${day} ${monthNames[monthIndex]} ${year}`\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-6\">\r\n        <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\r\n          {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{this.state.value.name} </h5>\r\n            <p className=\"card-text\">{this.state.value.description} </p>\r\n            <a\r\n              href={this.state.download_url}\r\n              className=\"btn btn-outline-secondary mr-3\"\r\n            >\r\n              <i className=\"fab fa-github\" /> Clone Project\r\n            </a>\r\n            <a\r\n              href={this.state.repo_url}\r\n              target=\" _blank\"\r\n              className=\"btn btn-outline-secondary\"\r\n            >\r\n              <i className=\"fab fa-github\" /> Repo\r\n            </a>\r\n            <hr />\r\n            <Language value={this.state.value.languages_url}></Language>\r\n            <p className=\"card-text\">\r\n              <span className=\"text-dark card-link mr-4\">\r\n                <i className=\"fab fa-github\" /> Stars{\" \"}\r\n                <span className=\"badge badge-dark\">\r\n                  {this.state.stargazers_count}\r\n                </span>\r\n              </span>\r\n              <small className=\"text-muted\">\r\n                Updated {this.state.updated_at}\r\n              </small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Language extends Component {\r\n  state = {\r\n    data: []\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.handleRequest();\r\n  };\r\n\r\n  handleRequest = () => {\r\n    axios\r\n      .get(this.props.value)\r\n      .then(response => {\r\n        // handle success\r\n        // console.log(response.data);\r\n        return this.setState({ data: response.data });\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const array = [];\r\n    let total_count = 0;\r\n    for (let index in this.state.data) {\r\n      array.push(index);\r\n      total_count += this.state.data[index];\r\n      // console.log(index, this.state.data[index]);\r\n    }\r\n    // console.log(\"array contains \", array, this.state.data[array[0]]);\r\n\r\n    return (\r\n      <div className=\"pb-3\">\r\n        Languages:{\" \"}\r\n        {array.map(language => (\r\n          <p key={language} className=\"badge badge-light card-link\">\r\n            {language}: {Math.trunc((this.state.data[language] / total_count) * 1000) / 10} %\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCard;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport Configs from \"../editable-stuff/configurations.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nclass Project extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      heading: \"Recent Projects\",\r\n      projectsArray: [],\r\n      projectsLength: Configs.projectsLength,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.handleRequest();\r\n  };\r\n\r\n  handleRequest = (e) => {\r\n    axios\r\n      .get(Configs.gitHubLink + Configs.gitHubUsername + Configs.gitHubQuerry)\r\n      .then(response => {\r\n        // handle success\r\n        // console.log(response.data.slice(0, 4));\r\n        return this.setState({\r\n          projectsArray: response.data.slice(0, this.state.projectsLength)\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"projects\"\r\n        className=\"jumbotron jumbotron-fluid bg-transparent m-0\"\r\n      >\r\n        <div className=\"container container-fluid p-5\">\r\n          <h1 className=\"display-4 pb-5\">{this.state.heading}</h1>\r\n          <div className=\"row\">\r\n            {this.state.projectsArray.map(project => (\r\n              <ProjectCard\r\n                key={project.id}\r\n                id={project.id}\r\n                value={project}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  Project;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bgStyle: { backgroundColor: \"#f5f5f5\" },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer style={this.state.bgStyle} className=\"mt-auto py-3 text-center\">\r\n        {/* <strong> &copy; 2019 </strong>*/}\r\n        <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\r\n        <a\r\n          className=\"badge badge-dark\"\r\n          rel=\"noopener\"\r\n          href=\"https://github.com/hashirshoaeb\"\r\n          aria-label=\"My GitHub\"\r\n        >\r\n          Hashir Shoaib\r\n        </a>\r\n        {\" \"}using <i className=\"fab fa-react\"></i>\r\n        <p>\r\n          <small className=\"text-muted\">\r\n            {\" \"}\r\n            Project code is open source. Feel free to fork and make your own\r\n            version.\r\n          </small>\r\n        </p>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport MainBody from \"./components/MainBody\";\r\nimport AboutMe from \"./components/AboutMe\";\r\nimport Project from \"./components/Project\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <MainBody></MainBody>\r\n        <AboutMe></AboutMe>\r\n        <Project></Project>\r\n        <Footer></Footer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}